// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/(auth)/(routes)/sign-in/[[...sign-in]]/page.tsx
{
  const handler = {} as typeof import("../../app/(auth)/(routes)/sign-in/[[...sign-in]]/page.js")
  handler satisfies AppPageConfig<"/sign-in/[[...sign-in]]">
}

// Validate ../../app/(auth)/(routes)/sign-up/[[...sign-up]]/page.tsx
{
  const handler = {} as typeof import("../../app/(auth)/(routes)/sign-up/[[...sign-up]]/page.js")
  handler satisfies AppPageConfig<"/sign-up/[[...sign-up]]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/billboards/[billboardId]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/billboards/[billboardId]/page.js")
  handler satisfies AppPageConfig<"/[storeId]/billboards/[billboardId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/billboards/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/billboards/page.js")
  handler satisfies AppPageConfig<"/[storeId]/billboards">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/categories/[categoryId]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/categories/[categoryId]/page.js")
  handler satisfies AppPageConfig<"/[storeId]/categories/[categoryId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/categories/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/categories/page.js")
  handler satisfies AppPageConfig<"/[storeId]/categories">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/colors/[colorId]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/colors/[colorId]/page.js")
  handler satisfies AppPageConfig<"/[storeId]/colors/[colorId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/colors/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/colors/page.js")
  handler satisfies AppPageConfig<"/[storeId]/colors">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/orders/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/orders/page.js")
  handler satisfies AppPageConfig<"/[storeId]/orders">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/page.js")
  handler satisfies AppPageConfig<"/[storeId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/products/[productId]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/products/[productId]/page.js")
  handler satisfies AppPageConfig<"/[storeId]/products/[productId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/products/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/products/page.js")
  handler satisfies AppPageConfig<"/[storeId]/products">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/settings/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/settings/page.js")
  handler satisfies AppPageConfig<"/[storeId]/settings">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/sizes/[sizeId]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/sizes/[sizeId]/page.js")
  handler satisfies AppPageConfig<"/[storeId]/sizes/[sizeId]">
}

// Validate ../../app/(dashboard)/[storeId]/(routes)/sizes/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/(routes)/sizes/page.js")
  handler satisfies AppPageConfig<"/[storeId]/sizes">
}

// Validate ../../app/(root)/(routes)/page.tsx
{
  const handler = {} as typeof import("../../app/(root)/(routes)/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/api/[storeId]/billboards/[billboardId]/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/billboards/[billboardId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/billboards/[billboardId]">
}

// Validate ../../app/api/[storeId]/billboards/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/billboards/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/billboards">
}

// Validate ../../app/api/[storeId]/categories/[categoryId]/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/categories/[categoryId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/categories/[categoryId]">
}

// Validate ../../app/api/[storeId]/categories/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/categories/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/categories">
}

// Validate ../../app/api/[storeId]/colors/[sizeId]/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/colors/[sizeId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/colors/[sizeId]">
}

// Validate ../../app/api/[storeId]/colors/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/colors/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/colors">
}

// Validate ../../app/api/[storeId]/products/[productId]/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/products/[productId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/products/[productId]">
}

// Validate ../../app/api/[storeId]/products/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/products/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/products">
}

// Validate ../../app/api/[storeId]/sizes/[sizeId]/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/sizes/[sizeId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/sizes/[sizeId]">
}

// Validate ../../app/api/[storeId]/sizes/route.ts
{
  const handler = {} as typeof import("../../app/api/[storeId]/sizes/route.js")
  handler satisfies RouteHandlerConfig<"/api/[storeId]/sizes">
}

// Validate ../../app/api/stores/[storeId]/route.ts
{
  const handler = {} as typeof import("../../app/api/stores/[storeId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/stores/[storeId]">
}

// Validate ../../app/api/stores/route.ts
{
  const handler = {} as typeof import("../../app/api/stores/route.js")
  handler satisfies RouteHandlerConfig<"/api/stores">
}





// Validate ../../app/(auth)/(routes)/layout.tsx
{
  const handler = {} as typeof import("../../app/(auth)/(routes)/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../app/(dashboard)/[storeId]/layout.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/[storeId]/layout.js")
  handler satisfies LayoutConfig<"/[storeId]">
}

// Validate ../../app/(root)/layout.tsx
{
  const handler = {} as typeof import("../../app/(root)/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
