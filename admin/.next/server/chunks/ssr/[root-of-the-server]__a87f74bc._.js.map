{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///D:/E_HDD/__Practica_P2_Ecommerce_Nextjs/ecommerce_project_2/admin/app/%28dashboard%29/%5BstoreId%5D/%28routes%29/billboards/components/client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const BillboardClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call BillboardClient() from the server but BillboardClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/[storeId]/(routes)/billboards/components/client.tsx <module evaluation>\",\n    \"BillboardClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///D:/E_HDD/__Practica_P2_Ecommerce_Nextjs/ecommerce_project_2/admin/app/%28dashboard%29/%5BstoreId%5D/%28routes%29/billboards/components/client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const BillboardClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call BillboardClient() from the server but BillboardClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/[storeId]/(routes)/billboards/components/client.tsx\",\n    \"BillboardClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///D:/E_HDD/__Practica_P2_Ecommerce_Nextjs/ecommerce_project_2/admin/app/%28dashboard%29/%5BstoreId%5D/%28routes%29/billboards/page.tsx"],"sourcesContent":["import { format } from 'date-fns'\r\nimport prismadb from '@/lib/prismadb'\r\nimport { BillboardColumn } from './components/columns'\r\nimport { BillboardClient } from './components/client'\r\n\r\nconst BillboardsPage = async ({ \r\n    params\r\n}: { \r\n    params: Promise<{ storeId: string }>\r\n}) => {\r\n\r\n    const { storeId } = await params;\r\n    const billboards = await prismadb.billboard.findMany({\r\n        where: {\r\n            storeId: storeId,\r\n        },\r\n        orderBy: {\r\n            createdAt: 'desc'\r\n        }\r\n    })\r\n\r\n    const formattedBillboards: BillboardColumn[] = billboards.map(item => ({\r\n        id: item.id,\r\n        label: item.label,\r\n        createdAt: format(item.createdAt, \"MMMM do, yyyy\"),\r\n    }));\r\n\r\n    return (\r\n        <div className=\"flex-col\">\r\n            <div className=\"flex-1 p-8 pt-6 space-y-4\">\r\n                <BillboardClient data={formattedBillboards} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillboardsPage;"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,OAAO,EAC1B,MAAM,EAGT;IAEG,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM;IAC1B,MAAM,aAAa,MAAM,0HAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC;QACjD,OAAO;YACH,SAAS;QACb;QACA,SAAS;YACL,WAAW;QACf;IACJ;IAEA,MAAM,sBAAyC,WAAW,GAAG,CAAC,CAAA,OAAQ,CAAC;YACnE,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,KAAK;YACjB,WAAW,IAAA,+JAAM,EAAC,KAAK,SAAS,EAAE;QACtC,CAAC;IAED,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC,2MAAe;gBAAC,MAAM;;;;;;;;;;;;;;;;AAIvC;uCAEe","debugId":null}}]
}